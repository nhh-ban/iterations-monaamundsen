map(as_tibble) |>
list_rbind() |>
mutate(latestData = map_chr(latestData, 1, .default = NA_character_))
View(stations_metadata)
stations_metadata[[1]] |>
map(as_tibble) |>
list_rbind() |>
mutate(latestData = map_chr(latestData, 1, .default = NA_character_)) |>
mutate(latestData = as_datetime(latestData, tz = "UTC"))
stations_metadata[[1]] |>
map(as_tibble) |>
list_rbind() |>
mutate(latestData = map_chr(latestData, 1, .default = NA_character_)) |>
mutate(latestData = as_datetime(latestData, tz = "UTC")) |>
unnest_wider
stations_metadata[[1]] |>
map(as_tibble) |>
list_rbind() |>
mutate(latestData = map_chr(latestData, 1, .default = NA_character_)) |>
mutate(latestData = as_datetime(latestData, tz = "UTC")) |>
unnest_wider(location)
stations_metadata[[1]] |>
map(as_tibble) |>
list_rbind() |>
mutate(latestData = map_chr(latestData, 1, .default = NA_character_)) |>
mutate(latestData = as_datetime(latestData, tz = "UTC")) |>
unnest_wider(location) |>
unnest_wider(latLon)
# Opprett en dataramme med en "nested" kolonne
data <- tibble(
group = c("A", "B"),
values = list(c(1, 2, 3), c(4, 5, 6))
)
data
# Bruk unnest_wider() for å "un-neste" kolonnen "values"
data %>%
unnest_wider(values)
data <- tibble(
group = c("A", "B"),
values = list(c(1, 2, 3), c(4, 5, 6))
)
# Bruk unnest_wider() for å "un-neste" kolonnen "values"
data %>%
unnest_wider(values)
data
source("functions/data_transformations.r")
stations_metadata_df <-
stations_metadata %>%
transform_metadata_to_df(.)
View(stations_metadata_df)
test_stations_metadata(stations_metadata_df)
#### 3: Testing metadata
source("functions/data_tests.r")
test_stations_metadata(stations_metadata_df)
source("gql-queries/vol_qry.r")
to_iso8601 <- function(datetime, offset) {
# Add the offset in days
new_datetime <- datetime + days(offset)
# Convert the datetime to ISO8601 format with "Z" for UTC
iso8601_string <- format(new_datetime, "%Y-%m-%dT%H:%M:%SZ")
return(iso8601_string)
}
to_iso8601(as_datetime("2016-09-01 10:11:12"),0)
to_iso8601(as_datetime("2016-09-01 10:11:12"),0)
anytime::format_iso("2016-09-01 10:11:12")
anytime::format_iso("2016-09-01 10:11:12")
anytime::format_iso("2016-09-01 10:11:12")
hei <- anytime("2016-09-01 10:11:12")
anytime::format_iso("2016-09-01 10:11:12")
anytime::format_iso(hei)
hei <- anytime("2016-09-01 10:11:12")
anytime::format_iso(hei)
hei <- ymd_hms("2016-09-01 10:11:12")
format(hei, format = "%Y-%m-%dT%H:%M:%S")
format(hei, format = "%Y-%m-%dT%H:%M:%SZ")
hei <- ymd_hms("2016-09-01 10:11:12")
hei
format(hei, format = "%Y-%m-%dT%H:%M:%SZ")
hei <- anytime("2016-09-01 10:11:12")
hei
format(hei, format = "%Y-%m-%dT%H:%M:%SZ")
lubridate::format(hei, format = "%Y-%m-%dT%H:%M:%SZ")
as_datetime("2016-09-01 10:11:12", ts = "UTC")
as_datetime("2016-09-01 10:11:12", ts = "UTC")
as_datetime("2016-09-01 10:11:12", tz = "UTC")
as_datetime("2016-09-01 10:11:12", tz = "Z")
as_datetime("2016-09-01 10:11:12", tz = "UTC")
hei <- as_datetime("2016-09-01 10:11:12", tz = "UTC")
hei
format(hei, format = "%Y-%m-%dT%H:%M:%SZ")
to_iso8601 <- function(datetime, offset) {
new_datetime <- datetime + days(offset)
iso8601_string <- anytime(new_datetime)
return(iso8601_string)
}
to_iso8601(as_datetime("2016-09-01 10:11:12"),0)
format(hei, format = "%Y-%m-%dT%H:%M:%SZ")
hei <- as_datetime("2016-09-01 10:11:12", tz = "UTC") |>
format(hei, format = "%Y-%m-%dT%H:%M:%SZ")
hei <- as_datetime("2016-09-01 10:11:12", tz = "UTC") |>
format(hei, format = "%Y-%m-%dT%H:%M:%SZ")
hei <- as_datetime("2016-09-01 10:11:12", tz = "UTC")
format(hei, format = "%Y-%m-%dT%H:%M:%SZ")
to_iso8601 <- function(datetime, offset) {
new_datetime <- datetime + days(offset)
iso8601_string <- as_datetime(new_datetime, tz = "UTC")
iso8601_string_formated <- format(iso8601_string,
format= "%Y-%m-%dT%H:%M:%SZ")
return(iso8601_string_formated)
}
to_iso8601(as_datetime("2016-09-01 10:11:12"),0)
to_iso8601(as_datetime("2016-09-01 10:11:12"),-4)
iso8601_string <- as_datetime(new_datetime, tz = "UTC")
to_iso8601 <- function(datetime, offset) {
new_datetime <- datetime + days(offset)
iso8601_string <- as_datetime(new_datetime, tz = "UTC")
iso8601_string_formated <- format(iso8601_string,
format= "%Y-%m-%dT%H:%M:%SZ")
return(iso8601_string_formated)
}
View(stations_metadata_df)
test_stations_metadata(stations_metadata_df)
source("gql-queries/vol_qry.r")
sample_metadata <- stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes()
sample_metadata |>
ggplot(aes(x=from, y=volume)) +
geom_line() +
labs(x = "Time", y = "Volume", title = "hei") +
theme_classic()
stations_metadata_df %>%
sample_n(1) %>%  # Trekker ut en enkelt sample
pull(id) %>%    # Henter ID-en for den valgte sample
paste("Min sample har ID:", .) %>%  # Genererer setningen
cat("\n")
sample_metadata <- stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes()
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes()
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %>%
pull(id) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes()
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %>%
pull(id) %>%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes()
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes()
sample_metadata <- stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes()
sample_metadata |>
ggplot(aes(x=from, y=volume)) +
geom_line() +
labs(x = "Time", y = "Volume", title = sample_metadata$id) +
theme_classic()
View(sample_metadata)
View(sample_metadata)
View(stations_metadata_df)
View(sample_metadata)
View(sample_metadata)
stations_metadata_df %>%
sample_n(1)
stations_metadata_df %>%
sample_n(1) %>%
pull(id)
##################
sample <- stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1)
sample %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes()
sample_metadata <- sample %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes()
sample_metadata |>
ggplot(aes(x=from, y=volume)) +
geom_line() +
labs(x = "Time", y = "Volume", title = sample$id) +
theme_classic()
sample_metadata |>
ggplot(aes(x=from, y=volume)) +
geom_line() +
labs(x = "Time", y = "Volume", title = paste0("Plot of station with id: ", sample$id)) +
theme_classic()
sample <- stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1)
sample_metadata <- sample %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes()
sample_metadata |>
ggplot(aes(x=from, y=volume)) +
geom_line() +
labs(x = "Time", y = "Volume", title = paste0("Plot of station with id: ", sample$id)) +
theme_classic()
sample <- stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1)
sample_metadata <- sample %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes()
sample_metadata |>
ggplot(aes(x=from, y=volume)) +
geom_line() +
labs(x = "Time", y = "Volume", title = paste0("Plot of station with id: ", sample$id)) +
theme_classic()
sample <- stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1)
sample_metadata <- sample %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes()
sample_metadata |>
ggplot(aes(x=from, y=volume)) +
geom_line() +
labs(x = "Time", y = "Volume", title = paste0("Plot of station with id: ", sample$id)) +
theme_classic()
sample <- stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1)
sample_metadata <- sample %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes()
sample_metadata |>
ggplot(aes(x=from, y=volume)) +
geom_line() +
labs(x = "Time", y = "Volume", title = paste0("Plot of station with id: ", sample$id)) +
theme_classic()
sample <- stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1)
sample_metadata <- sample %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes()
sample_metadata |>
ggplot(aes(x=from, y=volume)) +
geom_line() +
labs(x = "Time", y = "Volume", title = paste0("Volume by time for station with id: ", sample$id)) +
theme_classic()
sample_metadata |>
ggplot(aes(x=from, y=volume)) +
geom_line() +
labs(x = "Time", y = "Volume",
title = paste0("Volume by time for station with id: ", sample$id)) +
theme_classic()  +
scale_color_gradient(low = "blue", high = "red")
sample_metadata |>
ggplot(aes(x=from, y=volume, color = volume)) +
geom_line() +
labs(x = "Time", y = "Volume",
title = paste0("Volume by time for station with id: ", sample$id)) +
theme_classic()  +
scale_color_gradient(low = "blue", high = "red")
sample_metadata |>
ggplot(aes(x=from, y=volume, color = volume)) +
geom_line() +
labs(x = "Time", y = "Volume",
title = paste0("Volume by time for station with id: ", sample$id)) +
theme_bw()  +
scale_color_gradient(low = "blue", high = "red")
sample <- stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1)
sample_metadata <- sample %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes()
sample_metadata |>
ggplot(aes(x=from, y=volume, color = volume)) +
geom_line() +
labs(x = "Time", y = "Volume",
title = paste0("Volume by time for station with id: ", sample$id)) +
theme_bw()  +
scale_color_gradient(low = "blue", high = "red")
View(sample_metadata)
View(stations_metadata)
View(stations_metadata_df)
View(sample)
sample_metadata |>
ggplot(aes(x=from, y=volume, color = volume)) +
geom_line() +
labs(x = "Time", y = "Volume",
title = paste0("Volume by time for station with id: ",
sample$id), ":", sample$name) +
theme_bw()  +
scale_color_gradient(low = "blue", high = "red")
sample_metadata |>
ggplot(aes(x=from, y=volume, color = volume)) +
geom_line() +
labs(x = "Time", y = "Volume",
title = paste0("Volume by time for station with id: ",
sample$id), ":", sample$name)) +
sample_metadata |>
ggplot(aes(x=from, y=volume, color = volume)) +
geom_line() +
labs(x = "Time", y = "Volume",
title = paste0("Volume by time for station with id: ",
sample$id, ":", sample$name)) +
theme_bw()  +
scale_color_gradient(low = "blue", high = "red")
sample_metadata |>
ggplot(aes(x=from, y=volume, color = volume)) +
geom_line() +
labs(x = "Time", y = "Volume",
title = paste("Volume by time for station with id:",
sample$id, ":", sample$name)) +
theme_bw()  +
scale_color_gradient(low = "blue", high = "red")
sample %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes()
stations_metadata[[1]] |>
map(as_tibble) |>
list_rbind()
hei <- stations_metadata[[1]] |>
map(as_tibble) |>
list_rbind()
view(hei)
view(stations_metadata)
view(stations_metadata[[1]])
View(sample_metadata)
View(stations_metadata)
stations_metadata[[1]] |>
map(as_tibble) |>
list_rbind() |>
mutate(latestData = map_chr(latestData, 1, .default = NA_character_)) |>
mutate(latestData = as_datetime(latestData, tz = "UTC"))  |>
unnest_wider(location)
stations_metadata[[1]] |>
map(as_tibble) |>
list_rbind() |>
mutate(latestData = map_chr(latestData, 1, .default = NA_character_)) |>
mutate(latestData = as_datetime(latestData, tz = "UTC"))  |>
unnest_wider(location) |>
unnest_wider(latLon)
View(sample_metadata)
trafficData[[1]] |>
map(as_tibble) |>
list_rbind()
rm(hei)
rm(data)
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic()
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes()
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url)
hei <- stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url)
View(hei)
View(sample_metadata)
View(stations_metadata)
trafficData[[1]] |>
map(as_tibble) |>
list_rbind()
hei$trafficData[[1]] |>
map(as_tibble) |>
list_rbind()
source("gql-queries/vol_qry.r")
sample <- stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1)
sample_metadata <- sample %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes()
sample_metadata |>
ggplot(aes(x=from, y=volume, color = volume)) +
geom_line() +
labs(x = "Time", y = "Volume",
title = paste("Volume by time for station with id:",
sample$id, ":", sample$name)) +
theme_bw()  +
scale_color_gradient(low = "blue", high = "red")
View(stations_metadata_df)
